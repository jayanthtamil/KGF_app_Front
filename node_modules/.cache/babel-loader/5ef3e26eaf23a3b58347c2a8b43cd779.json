{"ast":null,"code":"var _jsxFileName = \"/home/mani/dev/jayanth one/Finance/src/Components/Calculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Calculator = () => {\n  _s();\n\n  const [option, setoption] = useState(\"OS\");\n  const [grams, setgrams] = useState();\n  const [min, setmin] = useState();\n\n  const calculate = () => {\n    if (option === \"OS\") {\n      let min = 3000 * grams;\n      setmin(min);\n    } else if (option === \"22CT\") {\n      let min = 3600 * grams;\n      setmin(min);\n    } else if (option === \"KDM\") {\n      let min = 3600 * grams;\n      setmin(min);\n    } else if (option === \"916\") {\n      let min = 3750 * grams;\n      setmin(min);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"GOLD LOAN CALCULATOR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"ml-24\",\n        children: [\"Purity of Gold :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"option\",\n          onChange: event => setoption(event.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"OS\",\n            children: \"OS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"22CT\",\n            children: \"22CT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"KDM\",\n            children: \"KDM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"916\",\n            children: \"916\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"weight in grams\",\n        className: \"border-2 border-black ml-24\",\n        value: grams,\n        onChange: e => setgrams(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-red-500 border-2 border-black ml-24\",\n        type: \"button\",\n        onClick: () => calculate(),\n        children: \"CALCULATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-red-900\",\n        children: min\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Calculator, \"stMfdkLcgVbp3sV24Gac0A6Tz2Y=\");\n\n_c = Calculator;\nexport default Calculator;\n{\n  /* <label className=\"ml-24\"> Gold Type :</label>\n    <select  >\n     <option value=\"WITH STONE\" >WITH STONE</option>\n     <option  value=\"CHAIN\">CHAIN</option>\n     <option  value=\"SOLID\">SOLID</option>\n   </select> */\n}\n/*const Calculator = () => {\nconst [result , setResult ] = useState(\"\")\n\nconst handleClick = (e) =>{\n  setResult(result.concat(e.target.name));\n}\n\nconst clear =()=>{\n        setResult(\"\")\n}\n\nconst backspace =()=>{\n          setResult(result.slice(0,-1));\n}\n\nconst calculate =()=>{\n  try{\n  setResult(eval(result).toString());\n  }\n  catch(err){\n    setResult(\"Error\")\n  }\n}\n\n  return(\n            <>\n\n            <div className=\"container\">\n              <form>\n             <input className=\"h-20 w-64 bg-gray-900 text-white text-right text-2xl font-medium\" type=\"text\" value={result} />\n             </form>\n             <div className=\"keypad\">\n                  <button className=\"highlight\" onClick={clear} id=\"clear\">Clear</button>\n                  <button className=\"highlight\" onClick={backspace} id=\"backspace\">C</button>\n                  <button className=\"highlight\" name=\"/\" onClick={handleClick}>&divide;</button>\n                  <button name=\"7\" onClick={handleClick}>7</button>\n                  <button name=\"8\" onClick={handleClick}>8</button>\n                  <button name=\"9\" onClick={handleClick}>9</button>\n                  <button className=\"highlight\" name=\"*\" onClick={handleClick}>&times;</button>\n                  <button name=\"4\" onClick={handleClick}>4</button>\n                  <button name=\"5\" onClick={handleClick}>5</button>\n                  <button name=\"6\" onClick={handleClick}>6</button>\n                  <button className=\"highlight\" name=\"-\" onClick={handleClick}>&ndash;</button>\n                  <button name=\"1\" onClick={handleClick}>1</button>\n                  <button name=\"2\" onClick={handleClick}>2</button>\n                  <button name=\"3\" onClick={handleClick} >3</button>\n                  <button className=\"highlight\" name=\"+\" onClick={handleClick}>+</button>\n                  <button name=\"0\" onClick={handleClick}>0</button>\n                  <button name=\".\" onClick={handleClick}>.</button>\n                  <button className=\"highlight\" name=\"=\" onClick={calculate} id=\"result\">=</button>\n             </div>\n               </div>\n\n              </> \n            );\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"sources":["/home/mani/dev/jayanth one/Finance/src/Components/Calculator.js"],"names":["React","useState","Calculator","option","setoption","grams","setgrams","min","setmin","calculate","event","target","value","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;AAEA,MAAMC,UAAU,GAAG,MAAK;AAAA;;AAEtB,QAAK,CAACC,MAAD,EAAUC,SAAV,IAAuBH,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACI,KAAD,EAASC,QAAT,IAAqBL,QAAQ,EAAnC;AACA,QAAK,CAACM,GAAD,EAAOC,MAAP,IAAiBP,QAAQ,EAA9B;;AAIA,QAAMQ,SAAS,GAAG,MAAK;AAErB,QAAGN,MAAM,KAAK,IAAd,EACA;AACE,UAAII,GAAG,GAAG,OAAKF,KAAf;AACAG,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAJD,MAKK,IAAIJ,MAAM,KAAK,MAAf,EAAsB;AACzB,UAAII,GAAG,GAAG,OAAKF,KAAf;AACAG,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAHI,MAIA,IAAIJ,MAAM,KAAK,KAAf,EAAqB;AACxB,UAAII,GAAG,GAAG,OAAKF,KAAf;AACAG,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAHI,MAIA,IAAIJ,MAAM,KAAK,KAAf,EAAqB;AACxB,UAAII,GAAG,GAAG,OAAKF,KAAf;AACAG,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD;AACF,GAnBD;;AAuBF,sBACE;AAAA,4BACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC,eAED;AAAA,8BACC;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,oDACC;AAAQ,UAAA,IAAI,EAAE,QAAd;AAAwB,UAAA,QAAQ,EAAIG,KAAD,IAAWN,SAAS,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvD;AAAA,kCACC;AAAS,YAAA,KAAK,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAS,YAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAS,YAAA,KAAK,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,eAIC;AAAS,YAAA,KAAK,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eASC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC,iBAAjC;AAAmD,QAAA,SAAS,EAAC,6BAA7D;AAA4F,QAAA,KAAK,EAAEP,KAAnG;AAA0G,QAAA,QAAQ,EAAIQ,CAAD,IAAOP,QAAQ,CAACO,CAAC,CAACF,MAAF,CAASC,KAAV;AAApI;AAAA;AAAA;AAAA;AAAA,cATD,eAWC;AAAQ,QAAA,SAAS,EAAC,wCAAlB;AAA4D,QAAA,IAAI,EAAC,QAAjE;AAA0E,QAAA,OAAO,EAAE,MAAMH,SAAS,EAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXD,eAYC;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBAAgCF;AAAhC;AAAA;AAAA;AAAA;AAAA,cAZD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFC;AAAA,kBADF;AAoBC,CAnDD;;GAAML,U;;KAAAA,U;AAqDN,eAAeA,UAAf;AAGA;AAAC;AACD;AACA;AACA;AACA;AACA;AAAe;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState} from 'react';\n\nconst Calculator = () =>{\n\n  const[option , setoption] = useState(\"OS\");\n  const [grams , setgrams] = useState();\n  const[min , setmin] = useState();\n  \n\n \n  const calculate = () =>{  \n     \n    if(option === \"OS\")\n    {\n      let min = 3000*grams;\n      setmin(min)\n    }\n    else if (option === \"22CT\"){\n      let min = 3600*grams;\n      setmin(min)\n    }\n    else if (option === \"KDM\"){\n      let min = 3600*grams;\n      setmin(min)\n    }\n    else if (option === \"916\"){\n      let min = 3750*grams;\n      setmin(min)\n    }\n  }\n\n  \n\nreturn(\n  <>\n <div>GOLD LOAN CALCULATOR</div>\n <form>\n  <label className=\"ml-24\">Purity of Gold :\n   <select name ='option'  onChange={ (event) => setoption(event.target.value) } >\n    <option  value=\"OS\" >OS</option>\n    <option  value=\"22CT\" >22CT</option>\n    <option  value=\"KDM\">KDM</option>\n    <option  value=\"916\">916</option>\n  </select>\n  </label>\n  <input type=\"number\" placeholder=\"weight in grams\" className=\"border-2 border-black ml-24\"  value={grams} onChange={ (e) => setgrams(e.target.value) }/> \n\n  <button className=\"bg-red-500 border-2 border-black ml-24\"  type=\"button\" onClick={() => calculate()} >CALCULATE</button>\n  <div className=\"color-red-900\">{min}</div>\n  \n </form>\n  </>\n)\n}\n\nexport default Calculator; \n\n\n{/* <label className=\"ml-24\"> Gold Type :</label>\n   <select  >\n    <option value=\"WITH STONE\" >WITH STONE</option>\n    <option  value=\"CHAIN\">CHAIN</option>\n    <option  value=\"SOLID\">SOLID</option>\n  </select> */}\n\n/*const Calculator = () => {\nconst [result , setResult ] = useState(\"\")\n\nconst handleClick = (e) =>{\n  setResult(result.concat(e.target.name));\n}\n\nconst clear =()=>{\n        setResult(\"\")\n}\n\nconst backspace =()=>{\n          setResult(result.slice(0,-1));\n}\n\nconst calculate =()=>{\n  try{\n  setResult(eval(result).toString());\n  }\n  catch(err){\n    setResult(\"Error\")\n  }\n}\n\n  return(\n            <>\n\n            <div className=\"container\">\n              <form>\n             <input className=\"h-20 w-64 bg-gray-900 text-white text-right text-2xl font-medium\" type=\"text\" value={result} />\n             </form>\n             <div className=\"keypad\">\n                  <button className=\"highlight\" onClick={clear} id=\"clear\">Clear</button>\n                  <button className=\"highlight\" onClick={backspace} id=\"backspace\">C</button>\n                  <button className=\"highlight\" name=\"/\" onClick={handleClick}>&divide;</button>\n                  <button name=\"7\" onClick={handleClick}>7</button>\n                  <button name=\"8\" onClick={handleClick}>8</button>\n                  <button name=\"9\" onClick={handleClick}>9</button>\n                  <button className=\"highlight\" name=\"*\" onClick={handleClick}>&times;</button>\n                  <button name=\"4\" onClick={handleClick}>4</button>\n                  <button name=\"5\" onClick={handleClick}>5</button>\n                  <button name=\"6\" onClick={handleClick}>6</button>\n                  <button className=\"highlight\" name=\"-\" onClick={handleClick}>&ndash;</button>\n                  <button name=\"1\" onClick={handleClick}>1</button>\n                  <button name=\"2\" onClick={handleClick}>2</button>\n                  <button name=\"3\" onClick={handleClick} >3</button>\n                  <button className=\"highlight\" name=\"+\" onClick={handleClick}>+</button>\n                  <button name=\"0\" onClick={handleClick}>0</button>\n                  <button name=\".\" onClick={handleClick}>.</button>\n                  <button className=\"highlight\" name=\"=\" onClick={calculate} id=\"result\">=</button>\n             </div>\n               </div>\n\n              </> \n            );\n}*/"]},"metadata":{},"sourceType":"module"}